@*@model SAExpiations.Models.ExpiationOffence*@
@model IEnumerable<SAExpiations.ViewModels.ExpiationDetails>

@{
    ViewData["Title"] = "Details";
    string[] months = { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
    int total = 0;
    int yearlyTotal = 0;
    // this will store the colours for each expiation
    Dictionary<string, string> colours = new Dictionary<string, string>();
    colours.Add("COURTS RELIEF STATUS", "table-primary text-white fs-4");
    colours.Add("EXPIATED", "bg-danger text-white fs-4");
    colours.Add("COURTS ENFORCEMENT (pending or enforced)", "bg-secondary text-white fs-4");
    colours.Add("WITHDRAWN", "bg-success text-white fs-4");
    colours.Add("ISSUED OR CAUTIONED", "table-warning text-dark fs-4");
    colours.Add("MULTIPLE OFFENCES - PROCESSED", "bg-info text-white fs-4");
    colours.Add("INVALID", "bg-light text-dark fs-4");
    colours.Add("SUSPENDED FOR ENQUIRY", "bg-white text-dark fs-4");
};


<h1>Details</h1>

<div>
    <h4>ExpiationOffence</h4>
    <form method="get" asp-controller="ExpiationOffences" asp-action="Details">
    <!-- select year -->
        <select name="selectedYear" id="selectedYear" class="form-select" aria-label="Default select example"></select>
        <button class="btn btn-outline-success" type="submit">Search</button>
    </form>
    <hr />
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th scope="col">Month</th>
                <th scope="col">
                    @Html.DisplayNameFor(Model => Model.NoticeStatusDesc)

                </th>
                <th scope="col">
                    @Html.DisplayNameFor(Model => Model.StatusCount)
                </th>
            </tr>
        </thead>
    @for(var month = 0; month < 12; month++) {
        <tr>
                <th colspan="3" scope="row">@months[month]</th>
            @foreach(var item in Model){
                
                    if (item.IssueDate == month + 1)
                    {
                    <tr class="@colours[item.NoticeStatusDesc]">
                        <td>
                        </td>
                        <td colspan="1">
                                @Html.DisplayFor(modelItem => item.NoticeStatusDesc)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StatusCount)
                            <!--add total -->
                                @{
                                    total += @item.StatusCount; yearlyTotal += @item.StatusCount;
                                }
                        </td>
                    </tr>
                    }
            }
            <tr class="bg-primary font-weight-bold fs-3 fw-bolder">
                <td colspan="2" class="bg-primary text-end font-weight-bold">@months[month] Total:</td>
                <td colspan="1" class="bg-primary font-weight-bold">@total offences</td>
                @{total = 0;}
            </tr>
            </tr>
        }
    </table>
        <table class="table table-striped table-hover">
            <tr>
        <!-- visualise yearly total -->
            <td colspan="3" class="text-end font-weight-bold fs-2">Yearly Total: @yearlyTotal</td>
        </tr>
        @{
            yearlyTotal = 0;
        }
        </table>


   
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

<script defer>
    function addYears(){
       let currentYear = new Date().getFullYear()
       let numberYears = 4
        var select = document.getElementById("selectedYear");

        for (let i = 0 - (numberYears / 2); i < numberYears -1; i++){
            let option = new Option(currentYear + i)
            // append options 
            select.appendChild(option)
        }
    }
    addYears()


</script>
